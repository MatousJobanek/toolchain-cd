---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: image-pusher
#  namespace: toolchain-pipeline-cd
secrets:
- name: matousjobanek
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: buildah-short-sha-image
#  namespace: toolchain-pipeline-cd
spec:
  type: image
  params:
  - name: url
    value: quay.io/matousjobanek/buildah-short-sha:0.1
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: toolchain-cd-repo
#  namespace: toolchain-pipeline-cd
spec:
  type: git
  params:
  - name: url
    value: https://github.com/MatousJobanek/toolchain-cd.git
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-buildah-short-sha-image
#  namespace: toolchain-pipeline-cd
spec:
  inputs:
    resources:
    - name: toolchain-cd-repo
      type: git
      targetPath: toolchain-cd
    params:
    - name: tls-verify
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"

  outputs:
    resources:
    - name: buildah-short-sha-image
      type: image

  steps:
  - name: build
    image: quay.io/buildah/stable:v1.11.0
    workingDir: '/workspace/toolchain-cd/'
    command: ['buildah', 'bud', '--tls-verify=$(inputs.params.tls-verify)', '--layers', '-f', '/workspace/toolchain-cd/buildah-short-sha/Dockerfile', '-t', '$(outputs.resources.buildah-short-sha-image.url)', '.']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: push
    image: quay.io/buildah/stable:v1.11.0
    workingDir: '/workspace/toolchain-cd/'
    command: ['buildah', 'push', '--tls-verify=$(inputs.params.tls-verify)', '$(outputs.resources.buildah-short-sha-image.url)', 'docker://$(outputs.resources.buildah-short-sha-image.url)']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  volumes:
  - name: varlibcontainers
    emptyDir: {}
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-docker-tools-image
#  namespace: toolchain-pipeline-cd
spec:
  inputs:
    resources:
    - name: project-repo
      type: git
      targetPath: $(inputs.params.repo-path)
    params:
    - name: repo-path
      description: The path to the repository
    - name: tls-verify
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"

  outputs:
    resources:
    - name: tools-image
      type: image

  steps:
  - name: build
    image: quay.io/buildah/stable:v1.11.0
    workingDir: '/workspace/$(inputs.params.repo-path)/'
    command: ['buildah', 'bud', '--tls-verify=$(inputs.params.tls-verify)', '--layers', '-f', '/workspace/$(inputs.params.repo-path)/openshift-ci/Dockerfile.tools', '-t', '$(outputs.resources.tools-image.url)', '.']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: push
    image: quay.io/buildah/stable:v1.11.0
    workingDir: '/workspace/$(inputs.params.repo-path)/'
    command: ['buildah', 'push', '--tls-verify=$(inputs.params.tls-verify)', '$(outputs.resources.tools-image.url)', 'docker://$(outputs.resources.tools-image.url)']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  volumes:
  - name: varlibcontainers
    emptyDir: {}
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-project
#  namespace: toolchain-pipeline-cd
spec:
  inputs:
    resources:
    - name: project-repo
      type: git
      targetPath: $(inputs.params.repo-path)
    - name: tools-image
      type: image
    - name: buildah-short-sha-image
      type: image
    params:
    - name: git-revision
      description: The git revision
    - name: repo-path
      description: The path to the repository
    - name: tls-verify
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"

  outputs:
    resources:
    - name: binary-image
      type: image

  steps:
  - name: make-build
    workingDir: '/workspace/$(inputs.params.repo-path)/'
    image: $(inputs.resources.tools-image.url)
    command: ["make"]
    args: ["build"]
    securityContext:
      privileged: true

  - name: build-image
    image: $(inputs.resources.buildah-short-sha-image.url)
    workingDir: '/workspace/$(inputs.params.repo-path)/'
    command: ['buildah-short-sha', 'bud', '$(outputs.resources.binary-image.url)', '$(inputs.params.git-revision)', '--tls-verify=$(inputs.params.tls-verify)', '--layers', '-f', '/workspace/$(inputs.params.repo-path)/build/Dockerfile', '.']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: push-image
    image: $(inputs.resources.buildah-short-sha-image.url)
    workingDir: '/workspace/$(inputs.params.repo-path)/'
    command: ['buildah-short-sha', 'push', '$(outputs.resources.binary-image.url)', '$(inputs.params.git-revision)', '--tls-verify=$(inputs.params.tls-verify)']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  volumes:
  - name: varlibcontainers
    emptyDir: {}
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: generate-and-push-csv
#  namespace: toolchain-pipeline-cd
spec:
  inputs:
    resources:
    - name: project-repo
      type: git
    - name: tools-image
      type: image
    params:
    - name: repo-path
      description: The path to the repository
    - name: quay-namespace
      description: The quay namespace CSV should be pushed to
  steps:

  - name: mkdir
    image: $(inputs.resources.tools-image.url)
    command: ["mkdir"]
    args: ["-p", "$(inputs.params.repo-path)/"]
    securityContext:
      privileged: true

  - name: clone
    image: $(inputs.resources.tools-image.url)
    command: ["git"]
    args: ["clone", "$(inputs.resources.project-repo.url)", '/workspace/$(inputs.params.repo-path)/']
    securityContext:
      privileged: true

  - name: csv
    workingDir: '/workspace/$(inputs.params.repo-path)/'
    image: $(inputs.resources.tools-image.url)
    command: ["make"]
    args: ["push-to-quay-nightly", "QUAY_NAMESPACE=$(inputs.params.quay-namespace)"]
    securityContext:
      privileged: true

  volumes:
  - name: varlibcontainers
    emptyDir: {}
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: build-csv
#  namespace: toolchain-pipeline-cd
spec:
  params:
  - name: repo-path
    description: Path to the repo
  - name: git-revision
    description: The git revision
  - name: quay-namespace
    description: The quay namespace CSV should be pushed to
    default: codeready-toolchain
  resources:
  - name: project-repo
    type: git
  - name: tools-image
    type: image
  - name: binary-image
    type: image
  - name: buildah-short-sha-image
    type: image
  - name: toolchain-cd-repo
    type: git

  tasks:
  - name: build-tools-image
    taskRef:
      name: build-docker-tools-image
    params:
    - name: repo-path
      value: $(params.repo-path)
    resources:
      inputs:
      - name: project-repo
        resource: project-repo
      outputs:
      - name: tools-image
        resource: tools-image

  - name: build-buildah-short-sha-image
    taskRef:
      name: build-buildah-short-sha-image
    resources:
      inputs:
      - name: toolchain-cd-repo
        resource: toolchain-cd-repo
      outputs:
      - name: buildah-short-sha-image
        resource: buildah-short-sha-image

  - name: build-project
    taskRef:
      name: build-project
    params:
    - name: repo-path
      value: $(params.repo-path)
    - name: git-revision
      value: $(params.git-revision)
    resources:
      inputs:
      - name: project-repo
        resource: project-repo
      - name: tools-image
        resource: tools-image
      - name: buildah-short-sha-image
        resource: buildah-short-sha-image
      outputs:
      - name: binary-image
        resource: binary-image
    runAfter:
    - build-tools-image
    - build-buildah-short-sha-image

  - name: generate-and-push-csv
    taskRef:
      name: generate-and-push-csv
    params:
    - name: repo-path
      value: $(params.repo-path)
    - name: quay-namespace
      value: $(params.quay-namespace)
    resources:
      inputs:
      - name: project-repo
        resource: project-repo
      - name: tools-image
        resource: tools-image
    runAfter:
    - build-project
