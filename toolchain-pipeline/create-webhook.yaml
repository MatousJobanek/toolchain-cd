---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-createwebhook
#  namespace: toolchain-pipeline-cd
secrets:
- name: webhook-secret
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-webhook
#  namespace: toolchain-pipeline-cd
spec:
  volumes:
  - name: github-secret
    secret:
      secretName: $(inputs.params.GitHubSecretName)
  inputs:
    params:
    - name: ExternalDomain
      description: "The external domain for the EventListener e.g. `$(inputs.params.EventListenerName).<PROXYIP>.nip.io`"
    - name: GitHubRepo
      description: "The GitHub repo where the webhook will be created"
    - name: GitHubOrg
      description: "The GitHub organization where the webhook will be created"
    - name: GitHubSecretName
      description: "The Secret name for GitHub access token. This is always mounted and must exist"
    - name: GitHubAccessTokenKey
      description: "The GitHub access token key name"
    - name: GitHubUserKey
      description: "The GitHub user key name"
    - name: GitHubSecretStringKey
      description: "The GitHub secret string key name"
    - name: GitHubDomain
      description: "The GitHub domain. Override for GitHub Enterprise"
      default: "github.com"
    - name: WebhookEvents
      description: "List of events the webhook will send notifications for"
      default: '[\"push\",\"pull_request\"]'
  steps:
  - name: create-webhook
    image: everpeace/curl-jq:latest
    volumeMounts:
    - name: github-secret
      mountPath: /var/secret
    command:
    - sh
    args:
    - -ce
    - |
      set -e
      set -x
      echo "Create Webhook"
      WEBHOOK_ID=`curl -u $(cat /var/secret/$(inputs.params.GitHubUserKey)):$(cat /var/secret/$(inputs.params.GitHubAccessTokenKey)) -L https://api.github.com/repos/$(inputs.params.GitHubOrg)/$(inputs.params.GitHubRepo)/hooks | jq '.[] | select(.config.url | contains ("$(inputs.params.ExternalDomain)")) | .id'`
      if [ -n "${WEBHOOK_ID}" ];then
        METHOD="PATCH"
        WEBHOOK_ID_SUFFIX="/${WEBHOOK_ID}"
      else
        METHOD="POST"
      fi
      curl -v -d "{\"name\": \"web\",\"active\": true,\"events\": $(inputs.params.WebhookEvents),\"config\": {\"url\": \"$(inputs.params.ExternalDomain)\",\"content_type\": \"json\",\"insecure_ssl\": \"1\" ,\"secret\": \"$(cat /var/secret/$(inputs.params.GitHubSecretStringKey))\"}}" -X ${METHOD} -u $(cat /var/secret/$(inputs.params.GitHubUserKey)):$(cat /var/secret/$(inputs.params.GitHubAccessTokenKey)) -L https://api.github.com/repos/$(inputs.params.GitHubOrg)/$(inputs.params.GitHubRepo)/hooks${WEBHOOK_ID_SUFFIX}
---
apiVersion: tekton.dev/v1alpha1
kind: TaskRun
metadata:
  name: create-webhook-run
#  namespace: toolchain-pipeline-cd
spec:
  taskRef:
    name: create-webhook
  inputs:
    params:
    - name: GitHubOrg
      value: "matousjobanek"
    - name: GitHubRepo
      value: "host-operator"
    - name: GitHubSecretName
      value: webhook-secret
    - name: GitHubAccessTokenKey
      value: token
    - name: GitHubUserKey
      value: user
    - name: GitHubSecretStringKey
      value: secret
    - name: ExternalDomain
      value: http://toolchain-cd-eventlistener-toolchain-cd.apps.alkazako-20200204.devcluster.openshift.com
  timeout: 1000s
  serviceAccountName: tekton-triggers-createwebhook