apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: toolchain-cicd-pipeline
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: repo
    type: string
  - name: commit-sha
    type: string
  - name: pipeline-run-name
    type: string
  - name: dry-run
    type: string
  - name: repo-revision
    type: string
  - name: repo-url
    type: string
  - name: quay-namespace
    type: string
  tasks:

  - name: create-pending-status
    taskRef:
      name: create-github-status-task
    params:
    - name: repo
      value: $(params.repo)
    - name: commit-sha
      value: $(params.commit-sha)
    - name: state
      value: "pending"
    - name: description
      value: "Starting $(params.pipeline-run-name)"
    - name: context
      value: "toolchain-cicd-pipeline"

  - name: fetch-repository
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.repo-url)
    - name: subdirectory
      value: toolchain-cicd
    - name: repo-revision
      value: $(params.repo-revision)
    - name: depth
      value: "0"
    runAfter:
    - create-pending-status

  - name: build-buildah-short-sha-image
    taskRef:
      name: build-buildah-short-sha-image
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: dry-run
      value: $(params.dry-run)
    - name: quay-namespace
      value: $(params.quay-namespace)
    runAfter:
    - fetch-repository

  - name: apply-sync-directory
    taskRef:
      name: apply-resources-task
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: path-to-deployment
      value: sync
    - name: dry-run
      value: $(params.dry-run)
    runAfter:
    - fetch-repository

  - name: apply-toolchain-pipeline-directory
    taskRef:
      name: apply-resources-task
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: path-to-deployment
      value: toolchain-pipeline
    - name: dry-run
      value: $(params.dry-run)
    runAfter:
    - apply-sync-directory

  - name: apply-toolchain-cd-pipeline
    taskRef:
      name: process-project-and-apply-task
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: path-to-deployment
      value: toolchain-pipeline/pipeline/toolchain-cd-pipeline.yaml
    - name: dry-run
      value: $(params.dry-run)
    runAfter:
    - apply-toolchain-pipeline-directory

  - name: apply-webhook-directory
    taskRef:
      name: apply-resources-task
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: path-to-deployment
      value: webhook
    - name: dry-run
      value: $(params.dry-run)
    runAfter:
    - apply-sync-directory

  - name: ensure-webhooks
    taskRef:
      name: process-and-create-pipeline-webhook-task
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: path-to-deployment
      value: webhook/pipeline-run/pipeline-run.yaml
    - name: dry-run
      value: $(params.dry-run)
    runAfter:
    - apply-webhook-directory

  - name: create-success-status
    taskRef:
      name: create-github-status-task
    runAfter:
    - ensure-webhooks
    - apply-toolchain-cd-pipeline
    params:
    - name: repo
      value: $(params.repo)
    - name: commit-sha
      value: $(params.commit-sha)
    - name: state
      value: "success"
    - name: description
      value: "Completed $(params.pipeline-run-name)"
    - name: context
      value: "toolchain-cicd-pipeline"