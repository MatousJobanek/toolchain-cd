---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: apply-resources-task
spec:
  workspaces:
  - name: source
    mountPath: /source

  params:
  - name: path-to-deployment
    type: string
    description: Path to the manifest to apply
    default: deploy
  - name: dry-run
    type: string
    description: If true then run dryrun.
    default: "false"
  - name: subdirectory
    description: Subdirectory inside "source" workspace that contains the repo.
    default: "toolchain-cicd"

  steps:
  - name: run-oc-apply
    image: quay.io/openshift/origin-cli:4.3
    workingDir: '$(workspaces.source.path)/$(params.subdirectory)/'
    securityContext:
      privileged: true
    script: |
      #!/bin/sh
      set -ex
      oc apply --dry-run=$(params.dry-run) -f $(params.path-to-deployment)

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: process-project-and-apply-task
spec:
  workspaces:
  - name: source
    mountPath: /source

  params:
  - name: path-to-deployment
    type: string
    description: Path to the manifest to apply
    default: deploy
  - name: dry-run
    type: string
    description: If true then run dryrun.
    default: "false"
  - name: subdirectory
    description: Subdirectory inside "source" workspace that contains the repo.
    default: "toolchain-cicd"

  steps:
  - name: run-oc-apply
    image: quay.io/openshift/origin-cli:4.3
    securityContext:
      privileged: true
    workingDir: '$(workspaces.source.path)/$(params.subdirectory)/'
    script: |
      #!/bin/sh
      set -ex
      for REPO in `cat toolchain-cd-projects`; do
        oc process -f $(params.path-to-deployment) -p TOOLCHAIN_REPO=${REPO} | oc apply --dry-run=$(params.dry-run) -f -
      done
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: process-and-create-pipeline-webhook-task
spec:
  workspaces:
  - name: source
    mountPath: /source

  params:
  - name: path-to-deployment
    type: string
    description: Path to the manifest to apply
    default: deploy
  - name: dry-run
    type: string
    description: If true then run dryrun.
    default: "false"
  - name: subdirectory
    description: Subdirectory inside "source" workspace that contains the repo.
    default: "toolchain-cicd"

  steps:
  - name: run-oc-apply
    image: quay.io/openshift/origin-cli:4.3
    workingDir: '$(workspaces.source.path)/$(params.subdirectory)/'
    securityContext:
      privileged: true
    script: |
      #!/bin/sh
      set -ex
      ALL_PROJECTS=`cat toolchain-cd-projects | tr "\n" " "`
      oc process -f $(params.path-to-deployment) \
        -p TOOLCHAIN_CD_PROJECTS="${ALL_PROJECTS}" \
        -p EXTERNAL_SYNC_DOMAIN=`oc get route toolchain-cd-sync-eventlistener --template '{{.spec.host}}'` \
        -p EXTERNAL_TOOLCHAIN_CD_DOMAIN=`oc get route toolchain-cd-eventlistener --template '{{.spec.host}}'` \
        | oc create --dry-run=$(params.dry-run) -f -
